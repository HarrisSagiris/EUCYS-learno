<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= deck.title %> - Shared Deck</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4CAF50;
            --dark-bg: #121212;
            --card-bg: #1E1E1E;
            --input-bg: #2A2A2A;
            --text-primary: #FFFFFF;
            --text-secondary: #B0B0B0;
            --accent: #FF5722;
            --success: #4CAF50;
            --warning: #FFC107;
            --error: #F44336;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--dark-bg);
            color: var(--text-primary);
            line-height: 1.6;
            min-height: 100vh;
            background-image: radial-gradient(circle at 10% 20%, rgba(108, 99, 255, 0.1) 0%, rgba(0, 0, 0, 0) 80%);
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Header Styles */
        header {
            background-color: rgba(30, 30, 30, 0.8);
            backdrop-filter: blur(10px);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }
        
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            display: flex;
            align-items: center;
        }
        
        .logo i {
            margin-right: 10px;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
        }
        
        .nav-links li {
            margin-left: 30px;
        }
        
        .nav-links a {
            color: var(--text-primary);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
            display: flex;
            align-items: center;
        }
        
        .nav-links a i {
            margin-right: 8px;
        }
        
        .nav-links a:hover {
            color: var(--primary);
        }
        
        /* Main Content */
        .main-content {
            padding-top: 100px;
            padding-bottom: 50px;
            min-height: calc(100vh - 80px);
        }
        
        .study-header {
            margin-bottom: 30px;
            text-align: center;
        }
        
        .study-header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: var(--primary);
        }
        
        .study-header p {
            color: var(--text-secondary);
            font-size: 1.1rem;
        }
        
        /* Flashcard Styles */
        .flashcard-container {
            perspective: 1000px;
            width: 100%;
            max-width: 600px;
            height: 350px;
            margin: 0 auto 40px;
        }
        
        .flashcard {
            width: 100%;
            height: 100%;
            position: relative;
            transform-style: preserve-3d;
            transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            cursor: pointer;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
            border-radius: 15px;
        }
        
        .flashcard.flipped {
            transform: rotateY(180deg);
        }
        
        .flashcard-front, .flashcard-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 30px;
            border-radius: 15px;
            background-color: var(--card-bg);
            overflow: auto;
        }
        
        .flashcard-front {
            background: linear-gradient(145deg, #232323, #1a1a1a);
            color: var(--text-primary);
        }
        
        .flashcard-back {
            background: linear-gradient(145deg, #1a1a1a, #232323);
            color: var(--text-primary);
            transform: rotateY(180deg);
        }
        
        .card-content {
            font-size: 1.5rem;
            text-align: center;
            max-height: 100%;
            overflow-y: auto;
            padding: 10px;
        }
        
        .card-hint {
            position: absolute;
            bottom: 15px;
            font-size: 0.9rem;
            color: var(--text-secondary);
            opacity: 0.7;
        }
        
        /* Controls */
        .study-controls {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 30px;
            gap: 20px;
        }
        
        .control-btn {
            background-color: var(--input-bg);
            color: var(--text-primary);
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            cursor: pointer;
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            font-size: 1rem;
            display: flex;
            align-items: center;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .control-btn i {
            margin-right: 8px;
        }
        
        .control-btn:hover {
            background-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(108, 99, 255, 0.2);
        }
        
        .control-btn.prev {
            background-color: var(--input-bg);
        }
        
        .control-btn.next {
            background-color: var(--primary);
        }
        
        .control-btn.difficult {
            background-color: var(--warning);
        }
        
        .control-btn.easy {
            background-color: var(--success);
        }
        
        /* Progress Bar */
        .progress-container {
            width: 100%;
            max-width: 600px;
            margin: 0 auto 20px;
            background-color: var(--input-bg);
            height: 8px;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background-color: var(--primary);
            transition: width 0.3s ease;
        }
        
        .progress-text {
            text-align: center;
            margin-bottom: 20px;
            color: var(--text-secondary);
        }
        
        /* Card Image */
        .card-image {
            max-width: 100%;
            max-height: 150px;
            margin-bottom: 15px;
            border-radius: 8px;
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .flashcard-container {
                height: 300px;
            }
            
            .card-content {
                font-size: 1.2rem;
            }
            
            .study-controls {
                flex-wrap: wrap;
            }
            
            .control-btn {
                padding: 10px 20px;
                font-size: 0.9rem;
            }
            
            .study-header h1 {
                font-size: 1.8rem;
            }
        }
        
        @media (max-width: 480px) {
            .flashcard-container {
                height: 250px;
            }
            
            .card-content {
                font-size: 1rem;
            }
        }
        
        /* Grid view styles */
        .card-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .grid-card {
            height: 200px;
            cursor: pointer;
        }
        
        .shared-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--input-bg);
        }
        
        .shared-title {
            font-size: 2rem;
            font-weight: 600;
            color: var(--primary);
        }
        
        .shared-meta {
            display: flex;
            gap: 20px;
            margin-top: 10px;
        }
        
        .shared-meta-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }
        
        .view-count {
            background-color: rgba(108, 99, 255, 0.2);
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: 500;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav class="navbar">
                <a href="/" class="logo">
                    <i class="fas fa-brain"></i> LENR.ME
                </a>
                <ul class="nav-links">
                    <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
                    <li><a href="/login"><i class="fas fa-sign-in-alt"></i> Login</a></li>
                    <li><a href="/register"><i class="fas fa-user-plus"></i> Register</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="main-content">
        <div class="container">
            <div class="shared-header">
                <div>
                    <h1 class="shared-title"><%= deck.title %></h1>
                    <div class="shared-meta">
                        <div class="shared-meta-item">
                            <i class="fas fa-clone"></i>
                            <span><%= deck.cards.length %> cards</span>
                        </div>
                        <div class="shared-meta-item">
                            <i class="fas fa-calendar-alt"></i>
                            <span>Created on <%= new Date(deck.createdAt).toLocaleDateString() %></span>
                        </div>
                        <div class="shared-meta-item">
                            <i class="fas fa-eye"></i>
                            <span class="view-count"><%= deck.viewCount %> views</span>
                        </div>
                    </div>
                </div>
                <button id="studyModeBtn" class="control-btn next">
                    <i class="fas fa-play"></i> Study Mode
                </button>
            </div>

            <% if (deck.description) { %>
                <div class="study-header">
                    <p><%= deck.description %></p>
                </div>
            <% } %>

            <div id="cardContainer" class="card-grid">
                <% deck.cards.forEach((card, index) => { %>
                    <div class="flashcard grid-card" data-index="<%= index %>">
                        <div class="flashcard-front">
                            <% if (card.imageUrl) { %>
                                <img src="<%= card.imageUrl %>" alt="Card image" class="card-image">
                            <% } %>
                            <div class="card-content">
                                <%= card.front %>
                            </div>
                            <div class="card-hint">Click to flip</div>
                        </div>
                        <div class="flashcard-back">
                            <div class="card-content">
                                <%= card.back %>
                            </div>
                            <div class="card-hint">Click to flip back</div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <div id="studyMode" style="display: none;">
                <div class="progress-container">
                    <div class="progress-bar" id="progress-bar"></div>
                </div>
                <p class="progress-text" id="progress-text">Card 1 of <%= deck.cards.length %></p>
                
                <div class="flashcard-container">
                    <div id="currentCard" class="flashcard">
                        <div class="flashcard-front">
                            <div id="studyCardFront" class="card-content"></div>
                            <div class="card-hint">Click to flip</div>
                        </div>
                        <div class="flashcard-back">
                            <div id="studyCardBack" class="card-content"></div>
                            <div class="card-hint">Click to flip back</div>
                        </div>
                    </div>
                </div>
                
                <div class="study-controls">
                    <button id="prevCardBtn" class="control-btn prev">
                        <i class="fas fa-arrow-left"></i> Previous
                    </button>
                    <button id="flipCardBtn" class="control-btn">
                        <i class="fas fa-sync"></i> Flip Card
                    </button>
                    <button id="nextCardBtn" class="control-btn next">
                        Next <i class="fas fa-arrow-right"></i>
                    </button>
                </div>
                
                <div class="study-controls" style="margin-top: 15px;">
                    <button id="exitStudyBtn" class="control-btn">
                        <i class="fas fa-times"></i> Exit Study Mode
                    </button>
                </div>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Flip cards on click in grid view
            const flashcards = document.querySelectorAll('.flashcard');
            flashcards.forEach(card => {
                card.addEventListener('click', function() {
                    this.classList.toggle('flipped');
                });
            });

            // Study mode functionality
            const studyModeBtn = document.getElementById('studyModeBtn');
            const exitStudyBtn = document.getElementById('exitStudyBtn');
            const cardContainer = document.getElementById('cardContainer');
            const studyMode = document.getElementById('studyMode');
            const currentCard = document.getElementById('currentCard');
            const studyCardFront = document.getElementById('studyCardFront');
            const studyCardBack = document.getElementById('studyCardBack');
            const prevCardBtn = document.getElementById('prevCardBtn');
            const nextCardBtn = document.getElementById('nextCardBtn');
            const flipCardBtn = document.getElementById('flipCardBtn');
            const progressBar = document.getElementById('progress-bar');
            const progressText = document.getElementById('progress-text');

            let currentCardIndex = 0;
            const cards = <%- JSON.stringify(deck.cards) %>;

            function updateStudyCard() {
                const card = cards[currentCardIndex];
                
                // Reset flip state
                currentCard.classList.remove('flipped');
                
                // Update content
                studyCardFront.innerHTML = '';
                if (card.imageUrl) {
                    const img = document.createElement('img');
                    img.src = card.imageUrl;
                    img.alt = "Card image";
                    img.className = "card-image";
                    studyCardFront.appendChild(img);
                }
                
                const frontText = document.createElement('div');
                frontText.textContent = card.front;
                studyCardFront.appendChild(frontText);
                
                studyCardBack.textContent = card.back;
                
                // Update button states
                prevCardBtn.disabled = currentCardIndex === 0;
                nextCardBtn.disabled = currentCardIndex === cards.length - 1;
                
                // Update progress
                updateProgress();
            }
            
            function updateProgress() {
                const progress = ((currentCardIndex + 1) / cards.length) * 100;
                progressBar.style.width = `${progress}%`;
                progressText.textContent = `Card ${currentCardIndex + 1} of ${cards.length}`;
            }

            studyModeBtn.addEventListener('click', function() {
                cardContainer.style.display = 'none';
                studyMode.style.display = 'block';
                currentCardIndex = 0;
                updateStudyCard();
            });

            exitStudyBtn.addEventListener('click', function() {
                studyMode.style.display = 'none';
                cardContainer.style.display = 'grid';
            });

            prevCardBtn.addEventListener('click', function() {
                if (currentCardIndex > 0) {
                    currentCardIndex--;
                    updateStudyCard();
                }
            });

            nextCardBtn.addEventListener('click', function() {
                if (currentCardIndex < cards.length - 1) {
                    currentCardIndex++;
                    updateStudyCard();
                }
            });

            flipCardBtn.addEventListener('click', function() {
                currentCard.classList.toggle('flipped');
            });
            
            // Also flip card when clicking on the card itself
            currentCard.addEventListener('click', function() {
                this.classList.toggle('flipped');
            });
            
            // Keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (studyMode.style.display !== 'none') {
                    if (e.key === 'ArrowLeft' && !prevCardBtn.disabled) {
                        prevCardBtn.click();
                    } else if (e.key === 'ArrowRight' && !nextCardBtn.disabled) {
                        nextCardBtn.click();
                    } else if (e.key === ' ' || e.key === 'Enter') {
                        flipCardBtn.click();
                    }
                }
            });
        });
    </script>
</body>
</html>
